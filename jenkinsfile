#!groovy

properties(
    [
        [$class: 'BuildDiscarderProperty', strategy:
          [$class: 'LogRotator', artifactDaysToKeepStr: '14', artifactNumToKeepStr: '5', daysToKeepStr: '30', numToKeepStr: '60']],
        pipelineTriggers(
          [
              pollSCM('H/15 * * * *'),
              cron('@daily'),
          ]
        )
    ]
)
node {
    stage('Checkout') {
        //disable to recycle workspace data to save time/bandwidth
        deleteDir()
        checkout scm

        //enable for commit id in build number
        //env.git_commit_id = sh returnStdout: true, script: 'git rev-parse HEAD'
        //env.git_commit_id_short = env.git_commit_id.take(7)
        //currentBuild.displayName = "#${currentBuild.number}-${env.git_commit_id_short}"
    }

    stage('NPM Install') {
        withEnv(["NPM_CONFIG_LOGLEVEL=warn"]) {
            bat 'npm install'
  
        }
    }

   //stage('Test') {
     //   withEnv(["CHROME_BIN=/usr/bin/chromium-browser"]) {
      //    bat 'ng test --progress=false --watch false'
    //    }
       // junit '**/test-results.xml'
   // }

    stage('Lint') {
       bat 'npm run ng lint'
    }

    stage('Build') {
        milestone()
       bat 'npm run ng build --prod --aot  --progress=false'
      
    }

   // stage('Archive') {
     //   bat 'tar  -cvzf dist.tar.gz --strip-components=1 dist'
       // archive 'dist.tar.gz'

    //}

    stage('Deploy') {
        milestone()
        echo "Deploying..."
//sh 'ssh 05234@ rm -rf C:\Users\05234\Downloads\nginx-1.16.0\html\dist'
//sh 'ssh user@server mkdir -p C:\Users\05234\Downloads\nginx-1.16.0\html\'
bat 'cd dist'
bat 'ls -la dist/'
//sh 'scp -r dist/ user@server:/var/www/temp_deploy/dist/'
//sh ‘ssh user@server “rm -rf /var/www/example.com/dist/ && mv /var/www/temp_deploy/dist/ /var/www/example.com/”’
    }
}
