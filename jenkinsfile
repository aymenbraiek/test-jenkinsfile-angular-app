

#!groovy

properties(
    [
        [$class: 'BuildDiscarderProperty', strategy:
          [$class: 'LogRotator', artifactDaysToKeepStr: '14', artifactNumToKeepStr: '5', daysToKeepStr: '30', numToKeepStr: '60']],
        pipelineTriggers(
          [
              pollSCM('H/15 * * * *'),
              cron('@daily'),
          ]
        )
    ]
)
node {
    stage('Checkout') {
        //disable to recycle workspace data to save time/bandwidth
        deleteDir()
        checkout scm

        //enable for commit id in build number
        //env.git_commit_id = sh returnStdout: true, script: 'git rev-parse HEAD'
        //env.git_commit_id_short = env.git_commit_id.take(7)
        //currentBuild.displayName = "#${currentBuild.number}-${env.git_commit_id_short}"
    }

    stage('NPM Install') {
        withEnv(["NPM_CONFIG_LOGLEVEL=warn"]) {
            bat 'npm install'
  //          bat 'npm install -g tslint '
        }
    }

  //  stage('Test') {
     //   withEnv(["CHROME_BIN=/usr/bin/chromium-browser"]) {
      //    bat 'ng test --progress=false --watch false'
    //    }
       // junit '**/test-results.xml'
   // }

    stage('Lint') {
       bat 'ng lint'
    }

    stage('Build') {
        milestone()
       bat 'ng build --prod --aot  --progress=false'
      //bat 'ng build --prod --build-optimizer'
    }

    stage('Archive') {
        bat 'tar  -cvzf dist.tar.gz --strip-components=1 dist'
        archive 'dist.tar.gz'
        //bat ''' rm -rf node_modules
        //  oc start-build my-App-JenkinsFile --from-dir=. --follow
// '''
    }

    stage('Deploy') {
        milestone()
        echo "Deploying..."
    }
}
